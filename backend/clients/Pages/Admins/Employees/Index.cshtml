@page
@model clients.Pages.Admins.Employees.IndexModel
@{
}
<style>
  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  }
  table {
    width: 100%;
    border-collapse: collapse;
  }
  th {
    background-color: #4CAF50;
    color: white;
    padding: 8px;
  }
  td {
    padding: 8px;
    text-align: left;
    border-bottom: 1px solid #ddd;
  }
  tr:hover {background-color: #f5f5f5;}
  .status-active {
    color: green;
  }
  .status-inactive {
    color: red;
  }
  a {
    text-decoration: none;
    color: #333;
    padding: 4px 8px;
    background-color: #f4f4f4;
    border: 1px solid #ccc;
    border-radius: 4px;
    margin-right: 4px;
  }
  a:hover {
    background-color: #ddd;
  }
</style>

<h2>Employees</h2>
<a asp-page="Add" class="btn btn-primary">Add New Employee</a>
<a href="#" class="btn btn-primary" onclick="exportToExcel()">Export to Excel</a>
<a href="#" class="btn btn-primary" onclick="sortTableByFullName()">Sort by Full Name</a>
<br />
<table>
    <thead>
        <tr>
            <th>Staff Code</th>
            <th>Full Name</th>
            <th>Job Title</th>
            <th>Employee Type</th>
            <th>Join Date</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var employee in Model.Employees)
        {
            <tr>
                <td>@employee.EmployeeCode</td>
                <td>@employee.EmployeeName</td>
                <td>@employee.jobTitle</td>
                <td>@employee.EmployeeType</td>
                <td>@employee.CreatedDate</td>
                <td>@employee.status</td>
                <td>
                    <a asp-page="Edit" asp-route-id="@employee.Id">Edit</a> |
                    <a asp-page="Delete" asp-route-id="@employee.Id">Delete</a> |
                    @if (employee.status == "Active")
                    {
                        <a asp-page="Deactive" asp-route-id="@employee.Id">Deactivate</a>                        
                    }else{
                        <a asp-page="Active" asp-route-id="@employee.Id">Active</a>
                    }
                </td>
                @*<td>@employee.Role</td>*@
            </tr>
        }
    </tbody>
</table>

<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>
<script>
    function exportToExcel() {
        var table = document.querySelector('table');
        var data = [];

        // Lấy dữ liệu từ các hàng (loại bỏ cột "Actions")
        for (var i = 0; i < table.rows.length; i++) {
            var row = [];
            for (var j = 0; j < table.rows[i].cells.length - 1; j++) { // loại bỏ cột "Actions"
                row.push(table.rows[i].cells[j].innerText);
            }
            data.push(row);
        }

        // Tạo workbook và worksheet
        var wb = XLSX.utils.book_new();
        var ws = XLSX.utils.aoa_to_sheet(data);

        // Thêm worksheet vào workbook
        XLSX.utils.book_append_sheet(wb, ws, "Employees");

        // Tạo file Excel và tải về
        XLSX.writeFile(wb, "Employees.xlsx");
    }
</script>
<script>
    var sorted = false; // Biến để theo dõi trạng thái sắp xếp

    function sortTableByFullName() {
        var table = document.querySelector('table');
        var tbody = table.querySelector('tbody');
        var rows = Array.from(tbody.querySelectorAll('tr'));

        rows.sort(function (a, b) {
            var nameA = a.cells[1].innerText.toUpperCase();
            var nameB = b.cells[1].innerText.toUpperCase();
            if (nameA < nameB) {
                return -1;
            }
            if (nameA > nameB) {
                return 1;
            }
            return 0;
        });

        // Nếu đã được sắp xếp, đảo ngược thứ tự
        if (sorted) {
            rows.reverse();
        }

        // Xóa các hàng hiện tại trong bảng
        while (tbody.firstChild) {
            tbody.removeChild(tbody.firstChild);
        }

        // Thêm lại các hàng đã được sắp xếp
        rows.forEach(function (row) {
            tbody.appendChild(row);
        });

        sorted = !sorted; // Đảo ngược trạng thái sắp xếp
    }
</script>